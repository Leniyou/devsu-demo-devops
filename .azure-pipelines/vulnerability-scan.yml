---
parameters:
  - name: repositoryName
    type: string
  - name: snykServiceName
    type: string
  - name: gitleaksReportDir
    type: string
    default: "$(System.DefaultWorkingDirectory)/.gitleaks_report"

steps:
  - checkout: self
    persistCredentials: true

  # -- Escaneo de secretos expuestos con Gitleaks -- #
  - task: PowerShell@2
    displayName: "Instalar y configurar Gitleaks en Windows"
    inputs:
      targetType: 'inline'
      script: |
        $ErrorActionPreference = "Stop"

        # Variables
        $gitleaksUrl = "https://github.com/gitleaks/gitleaks/releases/download/v8.25.1/gitleaks_8.25.1_windows_x64.zip"
        $zipPath = "$env:BUILD_ARTIFACTSTAGINGDIRECTORY\gitleaks.zip"
        $extractPath = "$env:BUILD_ARTIFACTSTAGINGDIRECTORY\gitleaks"

        # Descargar Gitleaks ZIP
        Invoke-WebRequest -Uri $gitleaksUrl -OutFile $zipPath

        # Extraer el ZIP
        Expand-Archive -Path $zipPath -DestinationPath $extractPath -Force

        # Agregar Gitleaks al PATH temporalmente
        $env:Path += ";$extractPath"

        # Verificar versi√≥n
        gitleaks version

        # Crear directorio de reportes si no existe
        $reportDir = "${{ parameters.gitleaksReportDir }}"
        if (Test-Path -Path $reportDir) {
          Write-Host "El directorio para los reportes Gitleaks ya existe"
        } else {
          Write-Host "Creando directorio de reportes de Gitleaks"
          New-Item -ItemType Directory -Path $reportDir | Out-Null
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/gitleaks/gitleaks/refs/heads/master/report_templates/basic.tmpl" -OutFile "$reportDir\basic.tmpl"
        }

  - task: PowerShell@2
    displayName: "Escanear repositorio con Gitleaks"
    inputs:
      targetType: 'inline'
      script: |
        $ErrorActionPreference = "Stop"
  
        $reportDir = "${{ parameters.gitleaksReportDir }}"
        $gitleaksPath = "$env:BUILD_ARTIFACTSTAGINGDIRECTORY\gitleaks\gitleaks.exe"
  
        # Ejecutar escaneo SARIF
        & "$gitleaksPath" git . --log-opts -1 -v --exit-code 0 --platform azuredevops --report-path "$reportDir\gitleaks-report.sarif" --report-format sarif
  
        # Ejecutar escaneo con plantilla HTML
        & "$gitleaksPath" git . --log-opts -1 -v --exit-code 0 --platform azuredevops --report-path "$reportDir\gitleaks-report.html" --report-format template --report-template "$reportDir\basic.tmpl"
  
  - task: PublishBuildArtifacts@1
    displayName: "Publicar reporte de Gitleaks formato Sarif"
    inputs:
      PathtoPublish: '${{ parameters.gitleaksReportDir }}/gitleaks-report.sarif'
      ArtifactName: 'CodeAnalysisLogs'
      publishLocation: 'Container'

  - task: PublishBuildArtifacts@1
    displayName: "Publicar reporte de Gitleaks formato HTML"
    inputs:
      PathtoPublish: '${{ parameters.gitleaksReportDir }}/gitleaks-report.html'
      ArtifactName: 'CodeAnalysisLogs'
      publishLocation: 'Container'

  # -- Escaneo de vulnerabilidades con Snyk -- #
  - task: SnykSecurityScan@1
    displayName: "Escanear vulnerabilidades con Snyk"
    inputs:
      projectName: '${{ parameters.repositoryName }}'
      serviceConnectionEndpoint: '${{ parameters.snykServiceName }}'
      testType: 'app'
      monitorWhen: 'always'
      failOnIssues: false
